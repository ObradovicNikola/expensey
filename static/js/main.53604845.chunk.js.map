{"version":3,"sources":["components/ExpenseForm.js","firebase/firebase.js","actions/expenses.js","components/EditExpensePage.js","components/AddExpensePage.js","components/ExpenseListItem.js","components/ExpenseList.js","actions/filters.js","components/ExpenseListFilters.js","components/ExpensesSummary.js","selectors/expenses.js","components/ExpenseDashboardPage.js","components/Default.js","actions/auth.js","components/LoginPage.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","App.js","serviceWorker.js","reducers/expenses.js","reducers/filters.js","reducers/auth.js","store/configureStore.js","index.js","components/LoadingPage.js"],"names":["ExpenseForm","props","onDescriptionChange","e","description","target","value","setState","onNoteChange","note","onAmountChange","amount","match","onDateChange","createdAt","getTime","onSubmit","preventDefault","state","error","parseFloat","expense","toString","Date","className","this","action","type","placeholder","autoFocus","onChange","selected","date","dateFormat","name","id","rows","style","removeButton","Component","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","googleAuthProvider","GoogleAuthProvider","addExpense","startAddExpense","expenseData","dispatch","getState","uid","auth","ref","push","then","key","startRemoveExpense","remove","removeExpense","startEditExpense","updates","update","editExpense","EditExpensePage","useSelector","expenses","find","item","params","useDispatch","onClick","history","formExpense","AddExpensePage","ExpenseListItem","dayOfMonth","getDate","month","getMonth","year","getFullYear","to","ExpenseList","expensesList","visibleExpenses","map","length","setTextFilter","newText","sortByAmount","sortBy","sortByDate","setStartDate","startDate","undefined","setEndDate","endDate","ExpenseListFilters","textFilter","filters","text","sortFilter","startDateFilter","endDateFilter","onStartDateChange","selectsStart","placeholderText","onEndDateChange","selectsEnd","minDate","ExpensesSummary","totalExpense","forEach","expenseWord","hiddenCount","totalExpenses","details","filter","nextDay","setDate","startDateMatch","endDateMatch","textMatch","toLowerCase","includes","sort","a","b","ExpenseDashboardPage","getVisibleExpenses","Default","startLogin","signInWithPopup","startLogout","signOut","LoginPage","Header","PrivateRoute","component","rest","isAuthenticated","PublicRoute","createBrowserHistory","App","path","exact","Boolean","window","location","hostname","expensesReducer","concat","filtersReducerDefaultState","filtersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","require","config","store","createStore","combineReducers","authReducer","applyMiddleware","thunk","myApp","hasRendered","renderApp","ReactDOM","render","document","getElementById","src","alt","onAuthStateChanged","user","once","snapshot","childSnapshot","val","setExpenses","pathname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53604845.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles/ExpenseForm.css'\n\nexport default class ExpenseForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            description: props.expense ? props.expense.description : '',\n            note: props.expense ? props.expense.note : '',\n            amount: props.expense ? props.expense.amount.toString() : '',\n            createdAt: props.expense ? props.expense.createdAt : new Date().getTime(),\n            error: ''\n        }\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value\n        this.setState(() => ({ description }))\n    }\n\n    onNoteChange = (e) => {\n        const note = e.target.value\n        this.setState(() => ({ note }))\n    }\n\n    onAmountChange = (e) => {\n        const amount = e.target.value\n        if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n            this.setState(() => ({ amount }))\n        }\n    }\n\n    onDateChange = (createdAt) => {\n        if (createdAt) {\n            this.setState(() => ({ createdAt: createdAt.getTime() }))\n        }\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!this.state.description || !this.state.amount) {\n            // show error\n            this.setState({ error: 'Please provide description and amount.' })\n        } else {\n            //clear error\n            this.setState({\n                error: '',\n                description: '',\n                amount: ''\n            })\n            this.props.onSubmit({\n                description: this.state.description,\n                amount: parseFloat(this.state.amount),\n                createdAt: this.state.createdAt,\n                note: this.state.note\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"expense-form\">\n                {this.state.error && <h1>{this.state.error}</h1>}\n                <form action=\"\" onSubmit={this.onSubmit}>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-item\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Description\"\n                                autoFocus\n                                value={this.state.description}\n                                onChange={this.onDescriptionChange}\n                            />\n                        </div>\n                        <div className=\"input-group-item\">\n                            <input\n                                type=\"number\"\n                                placeholder=\"Amount\"\n                                value={this.state.amount}\n                                onChange={this.onAmountChange}\n                            />\n                        </div>\n                        <div className=\"input-group-item\">\n                            <DatePicker\n                                selected={this.state.createdAt}\n                                onChange={date => this.onDateChange(date)}\n                                dateFormat=\"dd MMM yyyy\"\n                            />\n                        </div>\n                        <div className=\"input-group-item\">\n                            <textarea\n                                name=\"\"\n                                id=\"\"\n                                // cols=\"30\"\n                                rows=\"5\"\n                                placeholder=\"Add a note for your expense (optional)\"\n                                value={this.state.note}\n                                onChange={this.onNoteChange}\n                                style={{ 'width': '100%', 'resize': 'vertical', 'padding': '5px' }}\n                            >\n                            </textarea>\n                        </div>\n                        <div className=\"input-group-item\">\n                            <button type=\"submit\">{this.props.expense ? 'Update expense' : 'Add expense'}</button>\n                            {this.props.removeButton}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import * as firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/analytics'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: 'https://expensey-2e1eb.firebaseio.com',\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nconst database = firebase.database()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nexport { firebase, googleAuthProvider, database as default }","// import uuid from 'uuid'\nimport database from '../firebase/firebase'\n\n// example before firebase\n// export const addExpense = (\n//     {\n//         description = '',\n//         note = '',\n//         amount = 0,\n//         createdAt = 0\n//     } = {}\n// ) => ({\n//     type: 'ADD_EXPENSE',\n//     expense: {\n//         id: uuid(),\n//         description,\n//         note,\n//         amount,\n//         createdAt\n//     }\n// })\n\nexport const addExpense = (expense) => ({\n    type: 'ADD_EXPENSE',\n    expense\n})\n\nexport const startAddExpense = (expenseData = {}) => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid\n        const {\n            description = '',\n            note = '',\n            amount = 0,\n            createdAt = 0\n        } = expenseData\n        const expense = { description, note, amount, createdAt }\n        return database.ref(`users/${uid}/expenses`).push(expense).then((ref) => {\n            dispatch(addExpense({\n                id: ref.key,\n                ...expense\n            }))\n        })\n    }\n}\n\nexport const removeExpense = (id) => ({\n    type: 'REMOVE_EXPENSE',\n    expense: {\n        id\n    }\n})\n\nexport const startRemoveExpense = (id) => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid\n        return database.ref(`users/${uid}/expenses/${id}`).remove().then(() => {\n            dispatch(removeExpense(id))\n        })\n    }\n}\n\nexport const editExpense = (id, updates) => ({\n    type: 'EDIT_EXPENSE',\n    id,\n    updates\n})\n\nexport const startEditExpense = (id, updates) => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid\n        return database.ref(`users/${uid}/expenses/${id}`).update(updates).then(() => {\n            dispatch(editExpense(id, updates))\n        })\n    }\n}\n\nexport const setExpenses = (expenses) => ({\n    type: 'SET_EXPENSES',\n    expenses\n})\n\nexport const startSetExpenses = () => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid\n        return database.ref(`users/${uid}/expenses`).once('value').then((snapshot) => {\n            const expenses = []\n            snapshot.forEach((childSnapshot) => {\n                expenses.push({\n                    id: childSnapshot.key,\n                    ...childSnapshot.val()\n                })\n            })\n\n            dispatch(setExpenses(expenses))\n        })\n    }\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ExpenseForm from './ExpenseForm'\nimport { startEditExpense, startRemoveExpense } from '../actions/expenses'\n\nexport default function EditExpensePage(props) {\n    const expense = useSelector(state => state.expenses.find((item) => {\n        return item.id === props.match.params.id\n    }))\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            {expense && <div>\n                <ExpenseForm\n                    expense={expense}\n                    removeButton={(<button\n                        onClick={() => {\n                            dispatch(startRemoveExpense(expense.id)).then(() => {\n                                props.history.push('/expensey/')\n                            })\n                        }}\n                        type=\"button\"\n                    >Remove</button>)}\n                    onSubmit={(formExpense) => {\n                        dispatch(startEditExpense(expense.id, formExpense)).then(() =>\n                            /// loading popup modal for user experience \n                            props.history.push('/expensey/')\n                        )\n                    }} />\n            </div>}\n            {!expense && <h1>Not valid expense!</h1>}\n        </div>\n    )\n}\n","import React from 'react'\nimport ExpenseForm from './ExpenseForm'\nimport { useDispatch } from 'react-redux'\nimport { startAddExpense } from '../actions/expenses'\n\n\nexport default function AddExpensePage(props) {\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            <h1 className=\"page-title\" style={{ 'marginTop': '20px' }}>Add Expense</h1>\n            <ExpenseForm\n                onSubmit={(expense) => {\n                    dispatch(startAddExpense(expense)).then(() =>\n                        /// loading popup modal for user experience \n                        props.history.push('/expensey/')\n                    )\n                }}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './styles/ExpenseListItem.css'\n\nexport default function ExpenseListItem({ description, amount, createdAt, id }) {\n    const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC',]\n    let date = new Date(createdAt)\n    let dayOfMonth = date.getDate();\n    let month = date.getMonth();\n    let year = date.getFullYear();\n\n    return (\n        <div>\n            <Link\n                to={`/expensey/edit/${id}`}\n                style={{}}\n                className=\"list-item\"\n            >\n                <div>\n                    <p>{description}</p>\n                    <p style={{ 'color': 'grey' }}>{(dayOfMonth < 10 ? '0' : '') + `${dayOfMonth} ${months[month]} ${year}`}</p>\n                    {/* <button onClick={() => dispatch(startRemoveExpense(id))}>Remove</button> */}\n                </div>\n                <div>\n                    <p>{amount}$</p>\n                </div>\n            </Link>\n            {/* <p>Created at: {new Date(createdAt).toString('dd MMM yyyy')}</p> */}\n        </div>\n    )\n}\n","import React from 'react'\nimport ExpenseListItem from './ExpenseListItem'\n\nexport default function ExpenseList(props) {\n    // const expenses = useSelector(state => state.expenses)\n    // const filters = useSelector(state => state.filters)\n\n    // const visibleExpenses = getVisibleExpenses(expenses, filters)\n    let expensesList = props.visibleExpenses.map((expense) => (\n        <ExpenseListItem key={expense.id} {...expense} />\n    ))\n    // let totalExpense = 0\n    // expenses.forEach((expense) => {\n    //     totalExpense += expense.amount\n    // })\n    // const expenseWord = visibleExpenses.length === 1 ? 'expense' : 'expenses'\n\n    // console.log(totalExpense)\n\n    return (\n        <div className=\"content-container\">\n            {expensesList.length > 0 &&\n                <div className=\"list-item\">\n                    <div style={{ 'color': 'grey' }}>\n                        <p>{expensesList.length > 1 ? 'Expenses' : 'Expense'}</p>\n                    </div>\n                    <div className=\"hide-on-mobile\">\n                        <p>Amount</p>\n                    </div>\n                </div>\n            }\n            {expensesList.length > 0 ? expensesList : <h1 style={{ 'textAlign': 'center' }}>No expenses</h1>}\n        </div>\n    )\n}\n","export const setTextFilter = (newText = '') => ({\n    type: 'SET_TEXT_FILTER',\n    newText\n})\n\nexport const sortByAmount = () => ({\n    type: 'SORT_BY_AMOUNT',\n    sortBy: 'amount'\n})\n\nexport const sortByDate = () => ({\n    type: 'SORT_BY_DATE',\n    sortBy: 'date'\n})\n\nexport const setStartDate = (startDate = undefined) => ({\n    type: 'SET_START_DATE',\n    startDate\n})\n\nexport const setEndDate = (endDate = undefined) => ({\n    type: 'SET_END_DATE',\n    endDate\n})","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setTextFilter, sortByAmount, sortByDate, setStartDate, setEndDate } from '../actions/filters'\nimport DatePicker from 'react-datepicker'\nimport './styles/ExpenseListFilters.css'\n\nexport default function ExpenseListFilters() {\n    const textFilter = useSelector(state => state.filters.text)\n    const sortFilter = useSelector(state => state.filters.sortBy)\n    const startDateFilter = useSelector(state => state.filters.startDate)\n    const endDateFilter = useSelector(state => state.filters.endDate)\n    const dispatch = useDispatch()\n\n    const sortBy = (text) => {\n        if (text === 'date') {\n            dispatch(sortByDate())\n        } else dispatch(sortByAmount())\n    }\n\n    const resetDates = () => {\n        dispatch(setStartDate())\n        dispatch(setEndDate())\n    }\n\n    const onStartDateChange = (date) => {\n        if (date) {\n            dispatch(setStartDate(date.getTime()))\n        }\n    }\n\n    const onEndDateChange = (date) => {\n        if (date) {\n            dispatch(setEndDate(date.getTime()))\n        }\n    }\n\n    return (\n        <div className=\"content-container\">\n            <div className=\"input-group\">\n                <div className=\"input-group-item\">\n                    <input\n                        type=\"text\"\n                        value={textFilter}\n                        onChange={(e) => dispatch(setTextFilter(e.target.value))}\n                        placeholder=\"Find expenses\"\n                    />\n                </div>\n                <div className=\"input-group-item\" >\n                    <select name=\"\" id=\"\" value={sortFilter} onChange={(e) => sortBy(e.target.value)}>\n                        <option value=\"date\">Date</option>\n                        <option value=\"amount\">Amount</option>\n                    </select>\n                </div>\n                <div className=\"date-input\">\n                    <div className=\"input-group-item\" style={{ 'width': 'auto' }}>\n                        <DatePicker\n                            selected={startDateFilter}\n                            onChange={date => onStartDateChange(date)}\n                            selectsStart\n                            startDate={startDateFilter}\n                            endDate={endDateFilter}\n                            placeholderText=\"Start date\"\n                            dateFormat=\"dd MMM yyyy\"\n                        />\n                    </div>\n                    <span>&#8611;</span>\n                    <div className=\"input-group-item date-picker\">\n                        <DatePicker\n                            selected={endDateFilter}\n                            onChange={date => onEndDateChange(date)}\n                            selectsEnd\n                            startDate={startDateFilter}\n                            endDate={endDateFilter}\n                            minDate={startDateFilter}\n                            placeholderText=\"End date\"\n                            dateFormat=\"dd MMM yyyy\"\n                        />\n                    </div>\n                    <div className=\"input-group-item\">\n                        <button onClick={resetDates}>&#10754;</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { history } from '../App';\nimport './styles/ExpensesSummary.css'\n\nexport default function ExpensesSummary(props) {\n    let totalExpense = 0\n    props.visibleExpenses.forEach((expense) => {\n        totalExpense += expense.amount\n    })\n    const expenseWord = props.visibleExpenses.length === 1 ? 'expense' : 'expenses'\n    const hiddenCount = props.totalExpenses - props.visibleExpenses.length\n    let details = <h2>Showing all expenses.</h2>\n    if (hiddenCount > 0)\n        details = <h2>Not showing<span> {hiddenCount} </span>{expenseWord}</h2>\n\n    return (\n        <div className=\"showcase\">\n            <div className=\"content-container\">\n                <h1>Viewing<span> {props.visibleExpenses.length} </span> {expenseWord} totalling <span>{totalExpense}$</span></h1>\n                {details}\n                <button onClick={() => history.push('/expensey/create')}>Create Expense</button>\n            </div>\n        </div>\n    )\n}\n","// Get visible expenses\n\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\n    return expenses.filter((expense) => {\n        if (endDate) {\n            let nextDay = new Date(endDate)\n            nextDay.setDate(new Date(endDate).getDate() + 1)\n            endDate = nextDay.getTime()\n        }\n        const startDateMatch = typeof startDate !== 'number' || expense.createdAt >= startDate\n        const endDateMatch = typeof endDate !== 'number' || expense.createdAt <= endDate\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase())\n\n        return startDateMatch && endDateMatch && textMatch\n    }).sort((a, b) => {\n        if (sortBy === 'date') {\n            return a.createdAt < b.createdAt ? 1 : -1\n        } else if (sortBy === 'amount') {\n            return a.amount < b.amount ? 1 : -1\n        }\n        return a.amount < b.amount ? 1 : -1\n    })\n}","import React from 'react'\nimport ExpenseList from './ExpenseList'\nimport ExpenseListFilters from './ExpenseListFilters'\nimport ExpensesSummary from './ExpensesSummary';\nimport { useSelector } from 'react-redux'\nimport getVisibleExpenses from '../selectors/expenses'\n\n\nexport default function ExpenseDashboardPage() {\n    const expenses = useSelector(state => state.expenses)\n    const filters = useSelector(state => state.filters)\n    const visibleExpenses = getVisibleExpenses(expenses, filters)\n\n    return (\n        <div>\n            <ExpensesSummary\n                visibleExpenses={visibleExpenses}\n                totalExpenses={expenses.length}\n            />\n            <ExpenseListFilters />\n            <ExpenseList visibleExpenses={visibleExpenses} />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Default() {\n    return (\n        <div>\n            404!\n        </div>\n    )\n}\n","import { firebase, googleAuthProvider } from '../firebase/firebase'\n\nexport const login = (uid) => ({\n    type: 'LOGIN',\n    uid\n})\n\nexport const startLogin = () => {\n    return () => {\n        return firebase.auth().signInWithPopup(googleAuthProvider)\n    }\n}\n\n\nexport const logout = () => ({\n    type: 'LOGOUT'\n})\n\nexport const startLogout = () => {\n    return () => {\n        return firebase.auth().signOut()\n    }\n}","import React from 'react'\nimport { startLogin } from '../actions/auth'\nimport { useDispatch } from 'react-redux'\nimport './styles/LoginPage.css'\n\n\nexport default function LoginPage() {\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-box\">\n                <h1>Expensey</h1>\n                <p>It's time to get your expenses under control!</p>\n                <button onClick={() => dispatch(startLogin())}>Login with Google</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './styles/Header.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { startLogout } from '../actions/auth'\n\nexport default function Header() {\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"header-container\">\n            <nav>\n                <Link style={{ 'textDecoration': 'none' }} to=\"/dashboard\">\n                    <h1>Expensey</h1>\n                </Link>\n                <button onClick={() => dispatch(startLogout())}>Logout</button>\n            </nav>\n        </div >\n    )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport Header from '../components/Header'\n\nconst PrivateRoute = ({\n    component: Component,\n    ...rest\n}) => {\n    const isAuthenticated = useSelector(state => !!state.auth.uid)\n    return < Route {...rest} component={(props) => (\n        isAuthenticated ? (\n            <div>\n                <Header />\n                <Component {...props} />\n            </div>\n        ) : (\n                <Redirect to=\"/expensey/\" />\n            )\n    )} />\n}\n\nexport default PrivateRoute","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst PublicRoute = ({\n    component: Component,\n    ...rest\n}) => {\n    const isAuthenticated = useSelector(state => !!state.auth.uid)\n    return < Route {...rest} component={(props) => (\n        isAuthenticated ? (\n            <Redirect to=\"/expensey/dashboard\" />\n        ) : (\n                <Component {...props} />\n            )\n    )} />\n}\n\nexport default PublicRoute","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom'\n// import createHistory from 'history/createBrowserHistory'\nimport { createBrowserHistory } from 'history'\nimport EditExpensePage from './components/EditExpensePage';\nimport AddExpensePage from './components/AddExpensePage';\nimport ExpenseDashboardPage from './components/ExpenseDashboardPage';\nimport Default from './components/Default';\n// import Header from './components/Header';\nimport LoginPage from './components/LoginPage';\nimport PrivateRoute from './routers/PrivateRoute'\nimport PublicRoute from './routers/PublicRoute'\n\nexport const history = createBrowserHistory()\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <div>\n          <Switch>\n            <PublicRoute path={\"/expensey\"} exact component={LoginPage} />\n            <PrivateRoute path={\"/expensey/dashboard\"} component={ExpenseDashboardPage} />\n            <PrivateRoute path={\"/expensey/create\"} component={AddExpensePage} />\n            <PrivateRoute path={\"/expensey/edit/:id\"} component={EditExpensePage} />\n            <Route component={Default} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Expenses reducer\n\n// const expensesReducerDefaultState = []\n\nconst expensesReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return state.concat(action.expense)\n        case 'REMOVE_EXPENSE':\n            return state.filter(item => item.id !== action.expense.id)\n        case 'EDIT_EXPENSE':\n            return state.map(item => {\n                if (item.id === action.id) {\n                    return {\n                        ...item,\n                        ...action.updates\n                    }\n                } else return item\n            })\n        case 'SET_EXPENSES':\n            return action.expenses\n        default:\n            return state\n    }\n}\n\nexport default expensesReducer","// Filters reducer\n\nconst date = new Date()\nconst startDateFilter = new Date(date.getFullYear(), date.getMonth(), 1);\nconst endDateFilter = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n\nconst filtersReducerDefaultState = {\n    text: '',\n    sortBy: 'date',\n    startDate: startDateFilter.getTime(),\n    endDate: endDateFilter.getTime()\n}\n\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'SET_TEXT_FILTER':\n            return { ...state, text: action.newText }\n        case 'SORT_BY_AMOUNT':\n        case 'SORT_BY_DATE':\n            return { ...state, sortBy: action.sortBy }\n        case 'SET_START_DATE':\n            return { ...state, startDate: action.startDate }\n        case 'SET_END_DATE':\n            return { ...state, endDate: action.endDate }\n        default:\n            return state\n    }\n}\n\nexport default filtersReducer","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return { uid: action.uid }\n        case 'LOGOUT':\n            return {}\n        default:\n            return state\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport expensesReducer from '../reducers/expenses'\nimport filtersReducer from '../reducers/filters'\nimport authReducer from '../reducers/auth'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            expenses: expensesReducer,\n            filters: filtersReducer,\n            auth: authReducer\n        }),\n        // without redux dev tools\n        // applyMiddleware(thunk)\n        composeEnhancers(applyMiddleware(thunk))\n    )\n    return store\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App, { history } from './App';\nimport * as serviceWorker from './serviceWorker';\n// import './firebase/firebase'\nimport { firebase } from './firebase/firebase'\nimport configureStore from './store/configureStore'\nimport { startSetExpenses } from './actions/expenses'\nimport { login, logout } from './actions/auth'\nimport { Provider } from 'react-redux'\nimport LoadingPage from './components/LoadingPage'\n\nrequire('dotenv').config()\n// const SuperAgent = require('superagent');\n\n// import dotenv from 'dotenv'\n// import errorReporter from './errorReporter'\n\n\nconst store = configureStore()\nconst myApp = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\nlet hasRendered = false\nconst renderApp = () => {\n    if (!hasRendered) {\n        ReactDOM.render(myApp, document.getElementById('root'));\n        hasRendered = true\n    }\n}\n// const unsubscribe = store.subscribe(() => {\n//     const state = store.getState()\n//     console.log(state.filters.text)\n// })\n// store.dispatch(addExpense({ id: 1, description: 'water bill', amount: 50, createdAt: new Date().getTime() }))\n// store.dispatch(addExpense({ id: 2, description: 'gas bill', amount: 100, createdAt: 1000 }))\n// store.dispatch(addExpense({ id: 3, description: 'rent', amount: 300 }))\n\n// const state = store.getState()\n// const visibleExpenses = getVisibleExpenses(state.expenses, state.filters)\n\n// console.log(visibleExpenses);\n\nReactDOM.render(<LoadingPage />, document.getElementById('root'))\n\nfirebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n        store.dispatch(login(user.uid))\n        store.dispatch(startSetExpenses()).then(() => {\n            renderApp()\n            if (history.location.pathname === '/') {\n                history.push('/expensey/dashboard')\n            }\n        })\n    } else {\n        store.dispatch(logout())\n        renderApp()\n        history.push('/expensey/')\n    }\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport './styles/LoadingPage.css'\n\nexport default function LoadingPage() {\n    return (\n        <div className=\"loader-container\">\n            <img className=\"loader-image\" src=\"/loader.gif\" alt=\"loading\" />\n        </div>\n    )\n}\n"],"sourceRoot":""}